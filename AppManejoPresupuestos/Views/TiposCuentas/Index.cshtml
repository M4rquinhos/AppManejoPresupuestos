@model IEnumerable<TipoCuenta>
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>Tipos Cuentas</h1>
<h5>
    El tipo cuenta se refiere a como podemos agrupar cuentas.
    Ejemplos: Prestamos, tarjetas de credito, etc.
</h5>

<a asp-action="Crear" class="btn btn-success mb-3">Crear nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Tipo Cuenta</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@item.IdTipoCuenta" class="ids" />
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@item.IdTipoCuenta">Editar</a>
                    <a class="btn btn-danger" asp-action="Eliminar" asp-route-id="@item.IdTipoCuenta">Borrar</a>
                </td>
                <td>
                    @item.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        const urlOrdenar = '@Url.Action("Ordenar")';


        $(function () {
            $("#reordenable").sortable({
                stop: async function (e, ui) {
                    await actualizarOrdendes();
                }
            });

            async function actualizarOrdendes() {
                const ids = obtenerIdsDeElementos();
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos() {
                const ids = $(".ids").map(function () {
                    return $(this).val();
                }).get();

                return ids;
            }

            async function enviarIdsAlBackend(ids) {
                var data = JSON.stringify(ids);

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
            }
        })
    </script>
}